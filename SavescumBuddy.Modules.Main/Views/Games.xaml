<UserControl x:Class="SavescumBuddy.Modules.Main.Views.Games"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SavescumBuddy.Modules.Main.Views"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:core="clr-namespace:SavescumBuddy.Core;assembly=SavescumBuddy.Core"
             xmlns:controls="clr-namespace:SavescumBuddy.CustomControls;assembly=SavescumBuddy.CustomControls"
             xmlns:models="clr-namespace:SavescumBuddy.Modules.Main.Models"
             xmlns:validation="clr-namespace:SavescumBuddy.CustomControls.Validation;assembly=SavescumBuddy.CustomControls"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SavescumBuddy.CustomControls;component/DefaultTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--ListView default (no ScrollView)-->
            <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
            <Style x:Key="ListViewNoScrollView" TargetType="{x:Type ListView}">
                <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
            <SolidColorBrush x:Key="SelectedItemBrush" Color="Transparent"/>
            <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Left"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedItemBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--TextBox Style Flat-->
            <Style x:Key="{x:Type TextBox}" TargetType="TextBox">
                <Setter Property="BorderBrush" Value="{StaticResource Ash}"/>
                <Setter Property="Foreground" Value="{StaticResource Ash}"/>
                <Setter Property="Padding" Value="6,4,6,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="Border" BorderBrush="{StaticResource Ash}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="3">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ResourceKey=SkyBlueInteraction}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ResourceKey=SkyBlueInteraction}"/>
                                    <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                                    <Setter Property="BorderBrush" Value="Red"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--Game Data Template-->
            <DataTemplate x:Key="Game">
                <Grid Background="White" Width="475" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="42"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="44"/>
                        <RowDefinition Height="44"/>
                        <RowDefinition Height="44"/>
                        <RowDefinition Height="44"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <!--Splitter-->
                    <Border BorderThickness="0,0,0,1" BorderBrush="#FFF0F0F0" Grid.ColumnSpan="3" Grid.Row="5"/>
                    <!--Delete button-->
                    <Button FontFamily="Segoe MDL2 Assets" Content="&#xE711;" FontSize="14" Grid.Column="2" Grid.Row="0" Cursor="Hand"
                HorizontalAlignment="Right" VerticalAlignment="Center" Margin="2" 
                Command="{Binding DataContext.RemoveGameCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}" ToolTip="Delete">
                        <Button.Style >
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Style.Triggers>
                                    <Trigger Property="Button.IsMouseOver"  Value="True">
                                        <Setter Property="Foreground" Value="#FFEE3B3B"/>
                                    </Trigger>
                                    <Trigger Property="Button.IsPressed"  Value="True">
                                        <Setter Property="Foreground" Value="#FFEE3B3B"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <!--Check mark-->
                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE73E;" FontSize="18" Grid.Column="0" Grid.Row="0"
                   VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2" Foreground="{StaticResource SomeGreen}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsCurrent}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <!--Savefile path line-->
                    <TextBlock Text="Savefile path:" Style="{StaticResource Caption}" Grid.Column="0" Grid.Row="1" 
                   VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10,0" Height="19" Width="82"/>
                    <TextBox x:Name="SaveFileBox" Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                  Height="28" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch">
                        <TextBox.Text>
                            <Binding Path="SavefilePath" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                <Binding.ValidationRules>
                                    <validation:ProperPathRule IsFilePath="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <!--SaveFileBox helper text-->
                    <TextBlock IsHitTestVisible="False" Text="What savefile to backup?" VerticalAlignment="Center" HorizontalAlignment="Left" 
                   Foreground="{StaticResource Grayish}" Grid.Column="1" Grid.Row="1" Height="16" Margin="10,12" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=SaveFileBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Button FontFamily="Segoe MDL2 Assets" Content="&#xE8E5;" FontSize="18" 
                            Command="{Binding DataContext.OpenFilePickerCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                            CommandParameter="{Binding}" Grid.Column="2" Grid.Row="1"
                HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <!--Backup directory line-->
                    <TextBlock Text="Backup directory:" Style="{StaticResource Caption}" VerticalAlignment="Center" 
                   HorizontalAlignment="Right" Grid.Row="2" Grid.Column="0" Height="19" Margin="10,0" Width="106"/>
                    <TextBox x:Name="DirectoryBox" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" 
                 Height="28" Grid.Column="1" Grid.Row="2">
                        <TextBox.Text>
                            <Binding Path="BackupFolder" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                <Binding.ValidationRules>
                                    <validation:ProperPathRule IsFilePath="False"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <!--DirectoryBox helper text-->
                    <TextBlock IsHitTestVisible="False" Text="Where to store the backups?" VerticalAlignment="Center" HorizontalAlignment="Left" 
                   Foreground="{StaticResource Grayish}" Grid.Column="1" Grid.Row="2" Height="16" Margin="10,12" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=DirectoryBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <!--TitleBox helper text-->
                    <TextBlock IsHitTestVisible="False" Text="Try to recall game title..." VerticalAlignment="Center" HorizontalAlignment="Left" 
                   Foreground="{StaticResource Grayish}" Grid.Column="1" Grid.Row="3" Height="16" Margin="10,12" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=TitleBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Button FontFamily="Segoe MDL2 Assets" Content="&#xE838;" FontSize="18" Grid.Column="2" Grid.Row="2" 
                            Command="{Binding DataContext.OpenFolderPickerCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                            CommandParameter="{Binding}"
                HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <!--Game title line-->
                    <TextBlock Text="Game title:" Style="{StaticResource Caption}"  Grid.Row="3" Grid.Column="0" Margin="10,0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                    <TextBox x:Name="TitleBox" Text="{Binding Title, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Height="28"  Grid.Column="1" Grid.Row="3" Background="Transparent"/>
                    <!--Update button-->
                    <Button Content="Update" Width="75" Height="28" FontSize="12" 
                            Command="{Binding DataContext.UpdateGameCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                            CommandParameter="{Binding}" Grid.Row="4" 
                HorizontalAlignment="Left" Grid.Column="1" FontWeight="Medium">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Foreground" Value="{StaticResource Ash}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" 
                                        CornerRadius="3" BorderThickness="1">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Text, ElementName=SaveFileBox}" Value="">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Text, ElementName=DirectoryBox}" Value="">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Text, ElementName=TitleBox}" Value="">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Text, ElementName=TitleBox}" Value="none">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=SaveFileBox}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=DirectoryBox}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <Trigger Property="IsEnabled"  Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource SkyBlue}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource SkyBlue}"/>
                                    </Trigger>
                                    <Trigger Property="Button.IsMouseOver"  Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource SkyBlueInteraction}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource SkyBlueInteraction}"/>
                                    </Trigger>
                                    <Trigger Property="Button.IsPressed"  Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource SkyBlueInteraction}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource SkyBlueInteraction}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <!--Set as Current button-->
                    <Button x:Name="SetCurrentButton" Content="Set as Current" Width="105" Height="28" FontSize="12" 
                            Command="{Binding DataContext.SetCurrentCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                            CommandParameter="{Binding}" Grid.Row="4" Cursor="Hand"
                            HorizontalAlignment="Left" Grid.Column="1" Margin="90,0" FontWeight="Medium">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Foreground" Value="{StaticResource Ash}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" 
                                        CornerRadius="3" BorderThickness="1">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsCurrent}" Value="1">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <Trigger Property="IsEnabled"  Value="False">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="Button.IsMouseOver"  Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource SomeGreen}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource SomeGreen}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ListView x:Name="GamesListView" Grid.Column="1" ItemsSource="{Binding Games}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" SelectionMode="Single"
                  Margin="0,5" IsSynchronizedWithCurrentItem="True" BorderBrush="{x:Null}" Background="{x:Null}" 
                  ScrollViewer.CanContentScroll="True" Style="{DynamicResource ListViewNoScrollView}" MinWidth="485" ItemTemplate="{StaticResource Game}"/>

        <Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Foreground="{StaticResource SkyBlue}"
                        VerticalAlignment="Center" Margin="120,5,5,5" Command="{Binding AddGameCommand}" FontSize="14" Cursor="Hand"
                        Style="{StaticResource TextButton}" Height="28" Width="160">
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="&#xE710;" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Right" 
                                       VerticalAlignment="Center" FontSize="14" Margin="0,0,5,0"/>
                    <TextBlock Text="Add another game"/>
                </StackPanel>
            </Button.Content>
        </Button>
    </Grid>
</UserControl>
