<UserControl x:Class="SavescumBuddy.Modules.Main.Views.Backups"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SavescumBuddy.Modules.Main.Views"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:core="clr-namespace:SavescumBuddy.Core;assembly=SavescumBuddy.Core"
             xmlns:controls="clr-namespace:SavescumBuddy.CustomControls;assembly=SavescumBuddy.CustomControls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:behaviors="clr-namespace:SavescumBuddy.CustomControls.Behaviors;assembly=SavescumBuddy.CustomControls"
             SnapsToDevicePixels="True"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="DeepPurple" SecondaryColor="Lime"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/SavescumBuddy.CustomControls;component/DefaultTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--TextBox Style Flat-->
            <Style x:Key="TextBoxStyleFlat2" TargetType="{x:Type TextBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="Transparent" SnapsToDevicePixels="True" CornerRadius="7" VerticalAlignment="Center">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                    <TextBlock x:Name="WatermarkText" Visibility="Hidden" IsHitTestVisible="False" Foreground="{StaticResource Ash}"
                                               FontFamily="Segoe MDL2 Assets" FontSize="14" Text="{TemplateBinding Tag}" Padding="5,1,10,0"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Text" Value="">
                                    <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                                </Trigger>
                                <!--<Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFE1E1E1"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFE1E1E1"/>
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <!--Divider (double, horizontal)-->
            <Border Grid.ColumnSpan="2" BorderThickness="0,1" BorderBrush="{StaticResource Bright}"/>
            
            <!--Sorting panel-->
            <StackPanel Orientation="Horizontal" Grid.Column="0" Margin="10">
                <!--Add button-->
                <Button Content="ADD" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding AddCommand}"/>
                
                <!--Divider (vertical)-->
                <Border Width="1" Margin="10,2" BorderBrush="{StaticResource Bright}" BorderThickness="1,0,0,0"/>

                <!--Autobackups button-->
                <ToggleButton FontFamily="Segoe UI" FontSize="12" Margin="5,0" IsChecked="{Binding Filter.HideAutobackups}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Hide" TextAlignment="Center"/>
                        <TextBlock Text="Autobackups" TextAlignment="Center"/>
                    </StackPanel>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource FilterToggleButton}">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource AutobackupsButtonBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <!--Current button-->
                <ToggleButton FontFamily="Segoe UI" FontSize="12" Margin="5,0" IsChecked="{Binding Filter.CurrentOnly}" >
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Current" TextAlignment="Center"/>
                        <TextBlock Text="Only" TextAlignment="Center"/>
                    </StackPanel>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource FilterToggleButton}">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource CurrentButtonBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Button Command="{Binding RemoveSelectedCommand}" Style="{StaticResource MaterialDesignIconForegroundButton}">
                    <materialDesign:PackIcon Kind="DeleteOutline"/>
                </Button>

            </StackPanel>
            <!--Sorting panel (ends here)-->
            
            <!--Paging panel-->
            <Grid HorizontalAlignment="Right" Grid.Column="1" Margin="7,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <materialDesign:PopupBox Margin="10,0">
                    <materialDesign:PopupBox.ToggleContent>
                        <Grid>
                            <TextBlock Width="100" Padding="7">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource MaterialDesignLightBackground}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat=" {0} - {1} out of {2} ">
                                        <Binding Path="From" FallbackValue="0"/>
                                        <Binding Path="To" FallbackValue="0"/>
                                        <Binding Path="TotalNumberOfBackups" FallbackValue="0"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                    </materialDesign:PopupBox.ToggleContent>
                    <StackPanel>
                        <Button Content="To Start" Command="{Binding NavigateToStartCommand}"/>
                        <Button Content="To End" Command="{Binding NavigateToEndCommand}"/>
                    </StackPanel>
                </materialDesign:PopupBox>
                <Button Grid.Column="1" Command="{Binding NavigateBackwardCommand}" Style="{StaticResource MaterialDesignIconForegroundButton}">
                    <materialDesign:PackIcon Kind="ChevronLeft"/>
                </Button>
                <Button Grid.Column="2" Command="{Binding NavigateForwardCommand}" Style="{StaticResource MaterialDesignIconForegroundButton}">
                    <materialDesign:PackIcon Kind="ChevronRight"/>
                </Button>
            </Grid>
            <!--Paging panel (ends here)-->
        </Grid>
        
        <!--DataGrid-->
        <DataGrid Grid.Row="1" ItemsSource="{Binding Backups}" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" 
                  CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserSortColumns="False">
            <!--Data Grid Context Menu-->
            <DataGrid.ContextMenu>
                <ContextMenu HorizontalOffset="-16" VerticalOffset="-16">
                    <MenuItem Header="Restore"
                              Command="{Binding RestoreCommand}"
                              CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                    <MenuItem Header="Delete" 
                              Command="{Binding RemoveCommand}"
                              CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                    <MenuItem Header="Show in Explorer"
                              Command="{Binding ShowInExplorerCommand}"
                              CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                    <MenuItem Command="{Binding ExecuteDriveActionCommand}"
                              CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Text" Value="Delete from Google Drive"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding PlacementTarget.SelectedItem.GoogleDriveId, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" Value="{x:Null}">
                                                <Setter Property="Text" Value="Send to Google Drive"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridCheckBoxColumn IsReadOnly="False"
                                        Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" 
                                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                    <DataGridCheckBoxColumn.Header>
                        <Border Background="Transparent">
                            <CheckBox IsChecked="{Binding DataContext.IsAllItemsSelected, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                    <DataGridCheckBoxColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.HeaderStyle>
                </DataGridCheckBoxColumn>
                <!--Error icon-->
                <!--<DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE783;" ToolTip="Savefile not found" 
                                       Foreground="IndianRed" FontSize="16" VerticalAlignment="Center" Margin="2"
                                       Visibility="{Binding SavefilePath, Converter={StaticResource ExistsToVisibilityConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <!--Image-->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Image Source="{Binding PicturePath, Converter={StaticResource UriToImgConverter}}"
                                       RenderOptions.BitmapScalingMode="Fant"
                                       Stretch="UniformToFill" Height="60" Margin="5">
                                    <Image.ToolTip>
                                        <ToolTip>
                                            <ToolTip.Style>
                                                <Style TargetType="{x:Type ToolTip}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Image Source="{Binding PicturePath, Converter={StaticResource UriToImgConverter}}"
                                                                       RenderOptions.BitmapScalingMode="Fant"
                                                                       Stretch="UniformToFill"/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToolTip.Style>
                                        </ToolTip>
                                    </Image.ToolTip>
                                </Image>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Time Stamp-->
                <DataGridTextColumn Binding="{Binding TimeStamp, Converter={StaticResource LongToDateTimeConverter}, StringFormat='MMM dd, yyyy h:mm:ss tt'}">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <ToggleButton FontFamily="Segoe MDL2 Assets" Content="&#xE8CB;" Width="25" Height="25" Margin="5,0" 
                                          IsChecked="{Binding DataContext.Filter.OrderByDesc, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource FilterToggleButton}">
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource GroupByGameButtonBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="10,0"/>
                            <Setter Property="FontWeight" Value="Medium"/>
                            <Setter Property="Foreground" Value="{StaticResource Foreground.Static}"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource Foreground.Selected}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!--Heart button-->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <ToggleButton FontFamily="Segoe MDL2 Assets" Width="25" Height="25" Margin="5,0" 
                                          IsChecked="{Binding DataContext.Filter.LikedOnly, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource FilterToggleButton}">
                                        <Setter Property="Content" Value="&#xEB51;"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource HeartButtonBrush}"/>
                                                <Setter Property="Content" Value="&#xEB52;"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton FontFamily="Segoe MDL2 Assets" FontSize="16" Width="22" Height="22" Margin="5"
                                          Command="{Binding DataContext.UpdateIsLikedCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                          CommandParameter="{Binding}"
                                          Cursor="Hand"
                                          IsChecked="{Binding IsLiked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IntToBoolConverter}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Content" Value="&#xEB51;"/>
                                        <Setter Property="Foreground" Value="#DAC6E0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{x:Null}">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Foreground" Value="#EEA6F1"/>
                                                <Setter Property="Content" Value="&#xEB52;"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="#EEA6F1"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Cloud Button-->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <ToggleButton FontFamily="Segoe MDL2 Assets" Width="25" Height="25" Margin="5,0" 
                                          IsChecked="{Binding DataContext.Filter.LikedOnly, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource FilterToggleButton}">
                                        <Setter Property="Content" Value="&#xE753;"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource HeartButtonBrush}"/>
                                                <!--<Setter Property="Content" Value="&#xEB52;"/>-->
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton FontFamily="Segoe MDL2 Assets" FontSize="20" Width="22" Height="22" Content="&#xE753;" Margin="5"
                                          IsChecked="{Binding GoogleDriveId, Converter={StaticResource ObjectToBoolConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="{StaticResource SkyBlue}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding GoogleDriveId}" Value="{x:Null}">
                                                <Setter Property="Foreground" Value="{StaticResource Ash}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Note-->
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBox x:Name="SearchBox" 
                                     Text="{Binding DataContext.Filter.Note, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, UpdateSourceTrigger=PropertyChanged}"
                                     HorizontalAlignment="Stretch" Height="34" VerticalAlignment="Center"
                                     BorderBrush="Transparent" Background="Transparent" Foreground="{StaticResource Dark}" Padding="6,1,10,0" 
                                     FontWeight="Normal" FontSize="14">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" 
                                                            Background="Transparent" SnapsToDevicePixels="True" VerticalAlignment="Center">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                            <TextBlock x:Name="WatermarkIcon" IsHitTestVisible="False" Foreground="{StaticResource Ash}" VerticalAlignment="Center"
                                                                       FontFamily="Segoe MDL2 Assets" Text="&#xE721;" FontSize="18"/>
                                                            <TextBlock x:Name="WatermarkText" Grid.Column="1" Visibility="Collapsed" IsHitTestVisible="False" Foreground="{StaticResource Ash}" Padding="8,1,10,0"
                                                                       FontFamily="Segoe UI" Text="Search by note..." FontSize="14" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                                                        </Trigger>
                                                        <Trigger Property="Text" Value="{x:Null}">
                                                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!--NoteTextBox-->
                                <TextBox x:Name="NoteTextBox" Text="{Binding Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="180" TextWrapping="Wrap"  
                                         Margin="5,3,5,5" MaxLines="3" Padding="3,0,0,0" Foreground="{StaticResource Dark}" Style="{StaticResource TextBoxStyleFlat2}"
                                         Grid.ColumnSpan="2" Tag="&#xE70F;">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding DataContext.UpdateNoteCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                                   CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <!--Char counter-->
                                <TextBlock Grid.Column="1" FontSize="10" Foreground="#FF969696" TextAlignment="Right"
                                           VerticalAlignment="Bottom" Margin="10,8">
                                    <Run Text="{Binding Text.Length, ElementName=NoteTextBox, Mode=OneWay}"/>
                                    <Run Text="/"/>
                                    <Run Text="{Binding MaxLength, ElementName=NoteTextBox, Mode=OneWay}"/>
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsFocused, ElementName=NoteTextBox}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
