<UserControl x:Class="SavescumBuddy.Modules.Main.Views.Settings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=System.Runtime"
             xmlns:local="clr-namespace:SavescumBuddy.Modules.Main.Views"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:core="clr-namespace:SavescumBuddy.Core;assembly=SavescumBuddy.Core"
             xmlns:enums="clr-namespace:SavescumBuddy.Core.Enums;assembly=SavescumBuddy.Core"
             xmlns:ext="clr-namespace:SavescumBuddy.Core.Extensions;assembly=SavescumBuddy.Core"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:controls="clr-namespace:SavescumBuddy.CustomControls;assembly=SavescumBuddy.CustomControls"
             prism:ViewModelLocator.AutoWireViewModel="True">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SavescumBuddy.CustomControls;component/DefaultTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--ListView default (no ScrollView)-->
            <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
            <Style x:Key="ListViewNoScrollView" TargetType="{x:Type ListView}">
                <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
            <SolidColorBrush x:Key="SelectedItemBrush" Color="Transparent"/>
            <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Left"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedItemBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <!--MAIN GRID-->
    <Grid Background="White" SnapsToDevicePixels="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--Escape button-->
        <Button Content="&#xE72B;" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Left" VerticalAlignment="Top" Width="40" Grid.Column="0"
                Background="{x:Null}" BorderBrush="{x:Null}" FontSize="24" Grid.Row="0" Height="34"
                Command="{Binding NavigateToBackupsCommand}" Margin="20,23"/>

        <!--About button-->
        <Button Content="About me" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="0" Cursor="Hand"
                Background="{x:Null}" BorderBrush="{x:Null}" FontSize="{StaticResource CaptionFontSize}" Grid.Row="0" 
                Command="{Binding DataContext.NavigateToAboutCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Margin="20,23">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Foreground" Value="{StaticResource Grayish}"/>
                </Style>
            </Button.Style>
        </Button>

        <!--CENTER COLUMN-->
        <ScrollViewer VerticalScrollBarVisibility="Hidden" Grid.Column="1">
            <Grid HorizontalAlignment="Stretch" Margin="0,20,0,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="64"/>
                    <!--<RowDefinition Height="64"/>
                    <RowDefinition Height="Auto" MinHeight="50"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="50"/>-->
                    <!--<RowDefinition />-->
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!--Auto backups-->
                <StackPanel Orientation="Vertical" Grid.Row="0">
                    <!--Header-->
                    <TextBlock Text="Auto Backups" Style="{StaticResource Header}" />
                    <!--Caption-->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource Caption}">
                            <TextBlock.Text>
                                <Binding StringFormat="A backup will be automatically created every {0}" Path="Settings.SelectedInterval"/>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Text=", unless..." TextAlignment="Left">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Caption}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=SkipBox}" Value="Never">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
                <!--Autobackup ToggleButton-->
                <ToggleButton Style="{StaticResource slidingToggleButton}" Grid.Column="1" Grid.Row="0" Margin="10,0,0,0"
                              IsChecked="{Binding Settings.AutobackupsOn}"/>

                <!--Auto backups Expander-->
                <Expander Header="Advanced..." ExpandDirection="Down" Grid.ColumnSpan="2" Margin="0,0,0,15" FontSize="{StaticResource CaptionFontSize}" Grid.Row="1" Foreground="{StaticResource Ash}">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="44"/>
                            <RowDefinition Height="44"/>
                            <RowDefinition Height="44"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Interval:" Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="0"/>
                        <TextBlock Text="Skip:" Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="1"/>
                        <TextBlock Text="Overwrite:" Grid.Column="0"  Margin="0,0,10,0" VerticalAlignment="Center" Grid.Row="2"/>
                        <ComboBox Grid.Column="1" Grid.Row="0" Height="28" Foreground="{StaticResource Ash}" SelectedItem="{Binding Settings.SelectedInterval}">
                            <sys:String>5 min</sys:String>
                            <sys:String>10 min</sys:String>
                            <sys:String>15 min</sys:String>
                            <sys:String>20 min</sys:String>
                            <sys:String>30 min</sys:String>
                            <sys:String>40 min</sys:String>
                            <sys:String>50 min</sys:String>
                            <sys:String>60 min</sys:String>
                        </ComboBox>
                        <ComboBox Grid.Column="1" Grid.Row="1" Height="28" Foreground="{StaticResource Ash}"
                                  ItemsSource="{ext:EnumToCollection EnumType={x:Type enums:SkipOption}}" 
                                  SelectedItem="{Binding Settings.SelectedSkipOption}"/>
                        <ComboBox Grid.Column="1" Grid.Row="2" Height="28" Foreground="{StaticResource Ash}" 
                                  ItemsSource="{ext:EnumToCollection EnumType={x:Type enums:OverwriteOption}}"
                                  SelectedItem="{Binding Settings.SelectedOverwriteOption}"/>
                    </Grid>
                </Expander>
                <!--Auto backups region ends here-->

                <!--Hotkeys-->
                <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="2">
                    <!--Header-->
                    <TextBlock Text="Hotkeys" Style="{StaticResource Header}"/>
                    <!--Caption-->
                    <StackPanel Orientation="Horizontal" Width="435">
                        <!--Backup caption-->
                        <TextBlock Style="{StaticResource Caption}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Save: {0}. " Converter="{StaticResource KeysToStringConverter}">
                                    <Binding Path="Settings.SelectedQSKey"/>
                                    <Binding Path="Settings.SelectedQSMod"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <!--Restore caption-->
                        <TextBlock Style="{StaticResource Caption}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Load: {0}. " Converter="{StaticResource KeysToStringConverter}">
                                    <Binding Path="Settings.SelectedQLKey"/>
                                    <Binding Path="Settings.SelectedQLMod"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <!--Overwrite caption-->
                        <TextBlock Style="{StaticResource Caption}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Overwrite: {0}. " Converter="{StaticResource KeysToStringConverter}">
                                    <Binding Path="Settings.SelectedSOKey"/>
                                    <Binding Path="Settings.SelectedSOMod"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
                <!--Toggle Hotkeys Buttons-->
                <ToggleButton Style="{StaticResource slidingToggleButton}" Grid.Column="1" Grid.Row="2" Margin="10,0,0,0"
                              IsChecked="{Binding Settings.HotkeysOn}"/>
                <!--Hotkeys Expander-->
                <Expander Header="Show more..." ExpandDirection="Down" Grid.ColumnSpan="2" Grid.Row="3" Margin="0,0,0,15" Foreground="{StaticResource Ash}"
                          FontSize="{StaticResource CaptionFontSize}" >
                    <StackPanel Orientation="Vertical" Margin="5">
                        <!--Backup box-->
                        <GroupBox Header="Backup" Padding="3" BorderBrush="{StaticResource Ash}" FontSize="{StaticResource СommonFontSize}" >
                            <Grid Margin="-2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="120"/>
                                </Grid.ColumnDefinitions>
                                <Border CornerRadius="3" BorderThickness="1" Height="30">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SaveHookIsEnabled}" Value="True">
                                                    <Setter Property="BorderBrush" Value="White"/>
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource Pulse}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock VerticalAlignment="Center" Margin="10,0" FontWeight="Medium">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource KeysToStringConverter}">
                                                <Binding Path="Settings.SelectedQSKey"/>
                                                <Binding Path="Settings.SelectedQSMod"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Border>
                                <ToggleButton Grid.Column="1" IsChecked="{Binding SelectedHotkeyAction, Converter={StaticResource HotkeyActionToBoolConverter}, ConverterParameter={x:Static enums:HotkeyAction.Save}, Mode=OneWay}" 
                                              Style="{StaticResource RecordHotkeyToggleButton}" Command="{Binding RegisterHotkeyCommand}" CommandParameter="{x:Static enums:HotkeyAction.Save}"/>
                            </Grid>
                        </GroupBox>
                        <!--Restore box-->
                        <GroupBox Header="Restore previous" Padding="3" BorderBrush="{StaticResource Ash}" FontSize="{StaticResource СommonFontSize}">
                            <Grid Margin="-2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="120"/>
                                </Grid.ColumnDefinitions>
                                <Border CornerRadius="3" BorderThickness="1" Height="30">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RestoreHookIsEnabled}" Value="True">
                                                    <Setter Property="BorderBrush" Value="White"/>
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource Pulse}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock VerticalAlignment="Center" Margin="10,0" FontWeight="Medium">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource KeysToStringConverter}">
                                                <Binding Path="Settings.SelectedQLKey"/>
                                                <Binding Path="Settings.SelectedQLMod"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Border>
                                <ToggleButton Grid.Column="1" IsChecked="{Binding SelectedHotkeyAction, Converter={StaticResource HotkeyActionToBoolConverter}, ConverterParameter={x:Static enums:HotkeyAction.Restore}, Mode=OneWay}" 
                                              Style="{StaticResource RecordHotkeyToggleButton}" Command="{Binding RegisterHotkeyCommand}" CommandParameter="{x:Static enums:HotkeyAction.Restore}"/>
                            </Grid>
                        </GroupBox>
                        <!--Overwrite box-->
                        <GroupBox Header="Backup and overwrite previous" Padding="3" BorderBrush="{StaticResource Ash}" FontSize="{StaticResource СommonFontSize}">
                            <Grid Margin="-2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="120"/>
                                </Grid.ColumnDefinitions>
                                <Border CornerRadius="3" BorderThickness="1" Height="30">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding OverwriteHookIsEnabled}" Value="True">
                                                    <Setter Property="BorderBrush" Value="White"/>
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource Pulse}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock VerticalAlignment="Center" Margin="10,0" FontWeight="Medium">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource KeysToStringConverter}">
                                                <Binding Path="Settings.SelectedSOKey"/>
                                                <Binding Path="Settings.SelectedSOMod"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Border>
                                <ToggleButton Grid.Column="1" IsChecked="{Binding SelectedHotkeyAction, Converter={StaticResource HotkeyActionToBoolConverter}, ConverterParameter={x:Static enums:HotkeyAction.Overwrite}, Mode=OneWay}" 
                                              Style="{StaticResource RecordHotkeyToggleButton}" Command="{Binding RegisterHotkeyCommand}" CommandParameter="{x:Static enums:HotkeyAction.Overwrite}"/>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </Expander>

                <!--Sound cues-->
                <StackPanel Grid.Row="4" >
                    <!--Header-->
                    <TextBlock Text="Sound Cues" Style="{StaticResource Header}" />
                    <!--Caption-->
                    <TextBlock Text="Play a sound cue when a hotkey is pressed." Style="{StaticResource Caption}"/>
                </StackPanel>

                <!--Toggle sound cues Button-->
                <ToggleButton Style="{StaticResource slidingToggleButton}" Grid.Column="1" Grid.Row="4" Margin="10,0,0,0"
                              IsChecked="{Binding Settings.SoundCuesOn}"/>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
