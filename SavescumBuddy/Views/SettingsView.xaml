<UserControl x:Class="SavescumBuddy.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SavescumBuddy.Views"
             mc:Ignorable="d" 
             d:DesignHeight="660" d:DesignWidth="1160" 
             Unloaded="UserControl_Unloaded">
    <UserControl.Style>
        <Style TargetType="{x:Type UserControl}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard Storyboard="{StaticResource Appear}"/>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <UserControl.Resources>
        <!--ListView default (no ScrollView)-->
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListViewNoScrollView" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
        <SolidColorBrush x:Key="SelectedItemBrush" Color="Transparent"/>
        <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Left"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedItemBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <!--MAIN GRID-->
    <Grid Background="White">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--Escape button-->
        <Button Content="&#xE72B;" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Left" VerticalAlignment="Top" Width="40" Grid.Column="0"
                Background="{x:Null}" BorderBrush="{x:Null}" FontSize="24" Grid.Row="0" Height="34"
                Command="{Binding DataContext.ChangeViewModelCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Margin="20,23"
                CommandParameter="{Binding DataContext.ToMain, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>

        <!--About button-->
        <Button Content="About me" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="0" Cursor="Hand"
                Background="{x:Null}" BorderBrush="{x:Null}" FontSize="{StaticResource CaptionFontSize}" Grid.Row="0" 
                Command="{Binding DataContext.ChangeViewModelCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Margin="20,23"
                CommandParameter="{Binding DataContext.ToAbout, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Foreground" Value="{StaticResource Grayish}"/>
                </Style>
            </Button.Style>
        </Button>

        <!--CENTER COLUMN-->
        <ScrollViewer VerticalScrollBarVisibility="Hidden" Grid.Column="1">
            <Grid HorizontalAlignment="Stretch" Margin="0,20,0,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="64"/>
                    <RowDefinition Height="84"/>
                    <RowDefinition Height="Auto" MinHeight="50"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!--Auto backups-->
                <!--Title (header + caption)-->
                <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="0">
                    <!--Header-->
                    <TextBlock Text="Auto backups" TextAlignment="Left" Style="{StaticResource Header}" />
                    <!--Caption-->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock TextAlignment="Left" Style="{StaticResource Caption}">
                            <Run Text="A backup will be automatically created every"/>
                            <Run Text="{Binding SelectedInterval, UpdateSourceTrigger=PropertyChanged, FallbackValue='10 mins'}"/>
                        </TextBlock>
                        <TextBlock Text=", unless..." TextAlignment="Left">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Caption}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=SkipBox}" Value="Never">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
                <!--Autobackup ToggleButton-->
                <Canvas Grid.Column="1" Grid.Row="0" Width="40" Margin="5" HorizontalAlignment="Right">
                    <ToggleButton x:Name="AutobackupButton" Content="&#xEC11;" FontSize="34" FontFamily="Segoe MDL2 Assets" 
                                  Height="34" Width="34" Canvas.Left="5" Canvas.Top="0" Style="{StaticResource SlidingToggleButton}"
                                  IsChecked="{Binding AutobackupsOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Ellipse Fill="White" Height="22" Width="22" StrokeThickness="2" Canvas.Left="3" Canvas.Top="6"
                             IsHitTestVisible="False">
                        <Ellipse.Style>
                            <Style TargetType="{x:Type Ellipse}">
                                <Setter Property="Stroke" Value="{Binding Foreground, ElementName=AutobackupButton}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=AutobackupButton}" Value="True">
                                        <Setter Property="Stroke" Value="{StaticResource SkyBlue}"/>
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource ToggleOn}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource ToggleOff}"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </Canvas>

                <!--Auto backups Expander-->
                <Expander Header="Advanced..." ExpandDirection="Down" Grid.ColumnSpan="2" Margin="0,0,0,15" FontSize="{StaticResource CaptionFontSize}" Grid.Row="1" Foreground="{StaticResource Ash}">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="44"/>
                            <RowDefinition Height="44"/>
                            <RowDefinition Height="44"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Interval:" VerticalAlignment="Center" HorizontalAlignment="Right"  Grid.Column="0" Margin="0,0,10,0" Grid.Row="0"/>
                        <ComboBox IsSynchronizedWithCurrentItem="True" Grid.Column="1" Grid.Row="0" Height="28" Foreground="{StaticResource Ash}"
                                          ItemsSource="{Binding IntervalList}" SelectedItem="{Binding SelectedInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Text="Skip:" Margin="0,0,10,0" FontSize="{StaticResource CaptionFontSize}" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"/>
                        <ComboBox x:Name="SkipBox" IsSynchronizedWithCurrentItem="True" Grid.Column="1" Grid.Row="1" Height="28" Foreground="{StaticResource Ash}"
                                          ItemsSource="{Binding SkipOptions}" SelectedItem="{Binding SelectedSkipOption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock Text="Overwrite:" Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center" Grid.Row="2"/>
                        <ComboBox IsSynchronizedWithCurrentItem="True" Grid.Column="1" Height="28" Foreground="{StaticResource Ash}"
                                          ItemsSource="{Binding OverwriteOptions}" SelectedItem="{Binding SelectedOverwriteOption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" />
                    </Grid>
                </Expander>
                <!--Auto backups region ends here-->

                <!--Shortcuts-->
                <!--Title-->
                <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="2">
                    <!--Header-->
                    <TextBlock Text="Hotkeys" Style="{StaticResource Header}"/>
                    <!--Caption-->
                    <StackPanel Orientation="Horizontal" Width="435">
                        <!--QS caption-->
                        <TextBlock Text="Save: " Style="{StaticResource Caption}"/>
                        <TextBlock>
                                <Run Text="{Binding SelectedQSMod, FallbackValue=Ctrl, Converter={StaticResource StringToModifierConverter}}"/>
                                <Run Text="+ "/>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Caption}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=QSMod}" Value="None">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding SelectedQSKey, FallbackValue=J}" Style="{StaticResource Caption}"/>
                        <!--QL caption-->
                        <TextBlock Text=". Load: " Style="{StaticResource Caption}"/>
                        <TextBlock>
                                <Run Text="{Binding SelectedQLMod, FallbackValue=Shift, Converter={StaticResource StringToModifierConverter}}"/>
                                <Run Text="+ "/>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Caption}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=QLMod}" Value="None">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Style="{StaticResource Caption}">
                            <Run Text="{Binding SelectedQLKey, FallbackValue=O}"/>
                        </TextBlock>
                        <!--SO caption-->
                        <TextBlock Text=". Overwrite prev.: " Style="{StaticResource Caption}"/>
                        <TextBlock>
                                <Run Text="{Binding SelectedSOMod, FallbackValue=Alt, Converter={StaticResource StringToModifierConverter}}"/>
                                <Run Text="+ "/>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Caption}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=QLMod}" Value="None">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Style="{StaticResource Caption}">
                            <Run Text="{Binding SelectedSOKey, FallbackValue=U}"/>.
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
                <!--Toggle Hotkeys Buttons-->
                <Canvas Grid.Column="1" Grid.Row="2" Margin="5" Width="40" HorizontalAlignment="Right" >
                    <ToggleButton x:Name="HotkeysButton" Content="&#xEC11;" FontSize="34" FontFamily="Segoe MDL2 Assets" Grid.Column="1"
                              IsChecked="{Binding HotkeysOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SlidingToggleButton}"
                                  Height="34" Width="34" Canvas.Left="5" Canvas.Top="0" />
                    <Ellipse Fill="White" Height="22" Width="22" StrokeThickness="2" Canvas.Left="3" Canvas.Top="6"
                             IsHitTestVisible="False">
                        <Ellipse.Style>
                            <Style TargetType="{x:Type Ellipse}">
                                <Setter Property="Stroke" Value="{Binding Foreground, ElementName=HotkeysButton}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=HotkeysButton}" Value="True">
                                        <Setter Property="Stroke" Value="{StaticResource SkyBlue}"/>
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource ToggleOn}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource ToggleOff}"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </Canvas>
                <!--Shortcuts Expander-->
                <Expander Header="Show more..." ExpandDirection="Down" Grid.ColumnSpan="2" Grid.Row="3" Margin="0,0,0,15" Foreground="{StaticResource Ash}"
                          FontSize="{StaticResource CaptionFontSize}" >
                    <StackPanel Orientation="Vertical" Margin="5">
                        <!--Quick save-->
                        <GroupBox Header="Backup" Padding="3" BorderBrush="{StaticResource Ash}" FontSize="{StaticResource СommonFontSize}" >
                            <Grid Margin="0,0,0,2" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Modifier" Margin="0,0,10,0" Style="{StaticResource Caption}" VerticalAlignment="Center" Grid.Column="0"/>
                                <ComboBox x:Name="QSMod" IsSynchronizedWithCurrentItem="True" HorizontalAlignment="Stretch" Grid.Column="1" Foreground="{StaticResource Ash}"
                                              ItemsSource="{Binding Modifiers}" SelectedValue="{Binding SelectedQSMod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToModifierConverter}}" />
                                <TextBlock Text="Key*" Margin="20,0,10,0" Style="{StaticResource Caption}" FontSize="{StaticResource CaptionFontSize}" VerticalAlignment="Center" Grid.Column="2"/>
                                <ComboBox IsSynchronizedWithCurrentItem="True" Grid.Column="3" Foreground="{StaticResource Ash}"
                                              ItemsSource="{Binding HotKeys}" SelectedValue="{Binding SelectedQSKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </GroupBox>
                        <!--Quick load-->
                        <GroupBox Header="Restore previous" Padding="3" BorderBrush="{StaticResource Ash}" FontSize="{StaticResource СommonFontSize}">
                            <Grid Margin="0,0,0,2" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Modifier" Margin="0,0,10,0" Style="{StaticResource Caption}" VerticalAlignment="Center" Grid.Column="0"/>
                                <ComboBox x:Name="QLMod" IsSynchronizedWithCurrentItem="True" Grid.Column="1" Foreground="{StaticResource Ash}"
                                              ItemsSource="{Binding Modifiers}" SelectedValue="{Binding SelectedQLMod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToModifierConverter}}" />
                                <TextBlock Text="Key*" Margin="20,0,10,0" Style="{StaticResource Caption}" VerticalAlignment="Center" Grid.Column="2"/>
                                <ComboBox IsSynchronizedWithCurrentItem="True" Grid.Column="3" Foreground="{StaticResource Ash}"
                                              ItemsSource="{Binding HotKeys}" SelectedValue="{Binding SelectedQLKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </GroupBox>
                        <!--Save and overwrite-->
                        <GroupBox Header="Backup and overwrite previous" Padding="3" BorderBrush="{StaticResource Ash}" FontSize="{StaticResource СommonFontSize}" >
                            <Grid Margin="0,0,0,2" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Modifier" Margin="0,0,10,0" Style="{StaticResource Caption}" VerticalAlignment="Center" Grid.Column="0"/>
                                <ComboBox x:Name="QSRMod" IsSynchronizedWithCurrentItem="True" HorizontalAlignment="Stretch" Grid.Column="1" Foreground="{StaticResource Ash}"
                                              ItemsSource="{Binding Modifiers}" SelectedValue="{Binding SelectedSOMod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringToModifierConverter}}" />
                                <TextBlock Text="Key*" Margin="20,0,10,0" Style="{StaticResource Caption}" FontSize="{StaticResource CaptionFontSize}" VerticalAlignment="Center" Grid.Column="2"/>
                                <ComboBox IsSynchronizedWithCurrentItem="True" Grid.Column="3" Foreground="{StaticResource Ash}"
                                              ItemsSource="{Binding HotKeys}" SelectedValue="{Binding SelectedSOKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </Expander>

                <!--Title (header + caption)-->
                <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="4" >
                    <!--Header-->
                    <TextBlock Text="Sound cues" TextAlignment="Left" Style="{StaticResource Header}" />
                    <!--Caption-->
                    <TextBlock Text="Play a sound cue when a hotkey is pressed." TextAlignment="Left" Style="{StaticResource Caption}"/>
                </StackPanel>

                <!--Title (header + caption)-->
                <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="5" >
                    <!--Header-->
                    <TextBlock Text="Google drive" TextAlignment="Left" Style="{StaticResource Header}" />
                    <!--Caption-->
                    <TextBlock TextAlignment="Left" Style="{StaticResource Caption}"> 
                        <Hyperlink Command="{Binding AuthorizeCommand}">
                                <Hyperlink.Style>
                                    <Style TargetType="{x:Type Hyperlink}">
                                        <Setter Property="Foreground" Value="{StaticResource SkyBlue}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{StaticResource Ash}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Hyperlink.Style>
                       Authorize</Hyperlink> to store your backups in Google drive.
                    </TextBlock>
                    <TextBlock Style="{StaticResource Caption}" Width="435">
                        <Run Text="Currently authorized as:"/>
                        <Run Text="{Binding AuthorizedAs, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>.
                    </TextBlock>
                </StackPanel>

                <!--Toggle Hotkeys Buttons-->
                <Canvas Grid.Column="1" Grid.Row="4" Margin="5" Width="40" HorizontalAlignment="Right">
                    <ToggleButton x:Name="SoundCuesButton" Content="&#xEC11;" FontSize="34" FontFamily="Segoe MDL2 Assets" Grid.Column="1"
                              IsChecked="{Binding SoundCuesOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SlidingToggleButton}"
                                  Height="34" Width="34" Canvas.Left="5" Canvas.Top="0" />
                    <Ellipse Fill="White" Height="22" Width="22" StrokeThickness="2" Canvas.Left="3" Canvas.Top="6"
                             IsHitTestVisible="False">
                        <Ellipse.Style>
                            <Style TargetType="{x:Type Ellipse}">
                                <Setter Property="Stroke" Value="{Binding Foreground, ElementName=SoundCuesButton}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=SoundCuesButton}" Value="True">
                                        <Setter Property="Stroke" Value="#FF80C8FA"/>
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource ToggleOn}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource ToggleOff}"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </Canvas>
                <!--Shortcuts region ends here-->

                <!--Game mgmt-->
                <!--Title-->
                <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="6">
                    <TextBlock Text="Games" Style="{StaticResource Header}" />
                    <TextBlock Style="{StaticResource Caption}" TextWrapping="Wrap" MaxWidth="475" HorizontalAlignment="Left" >
            Current game: <Run Text="{Binding CurrentGameTitle, Mode=OneWay, 
                                UpdateSourceTrigger=PropertyChanged, FallbackValue=none}"/>.
                    You can <Hyperlink Command="{Binding UploadCustomCommand}" ToolTipService.ShowDuration="30000" >
                                <Hyperlink.Style>
                                    <Style TargetType="{x:Type Hyperlink}">
                                        <Setter Property="Foreground" Value="{StaticResource SkyBlue}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CurrentGameTitle}" Value="none">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{StaticResource Ash}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Hyperlink.Style>
                                <Hyperlink.ToolTip>
                                    <ToolTip >
                                        <TextBlock Margin="3,2" Text="Savefiles must be located in separate folders.&#xA;To attach an image put it in the folder next to the savefile."/>
                                    </ToolTip>
                                </Hyperlink.ToolTip>
                       import</Hyperlink> backups of current game.
                    </TextBlock>
                    <!--Import progress bar-->
                    <ProgressBar Value="{Binding ImportProgress, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="100" BorderThickness="0"
                                 Height="2" Foreground="{StaticResource SkyBlue}" Margin="5" >
                        <ProgressBar.Style>
                            <Style TargetType="{x:Type ProgressBar}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ImportInProgress}" Value="true">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ProgressBar.Style>
                    </ProgressBar>
                </StackPanel>
                <!--Expander-->
                <ListView x:Name="GamesListView" ItemsSource="{Binding Games}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" SelectionMode="Single"
                  Margin="0,5" IsSynchronizedWithCurrentItem="True" Grid.ColumnSpan="2" Grid.Row="7" BorderBrush="{x:Null}" Background="{x:Null}" 
                          ScrollViewer.CanContentScroll="True" Style="{DynamicResource ListViewNoScrollView}" MinWidth="485">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <local:GameView/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Grid Grid.ColumnSpan="2" Grid.Row="8" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="&#xE710;" FontFamily="Segoe MDL2 Assets" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" 
                               VerticalAlignment="Center" Margin="5" FontSize="14" Foreground="#FF80C8FA"/>
                    <Button Content="Add another game" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" Foreground="{StaticResource SkyBlue}"
                            VerticalAlignment="Center" Margin="5" Command="{Binding AddGameCommand}" FontSize="14" Cursor="Hand" />
                </Grid>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
